//
//  main.swift
//  swift_garmmer
//
//  Created by lgw9898 on 2021/01/18.
//

import Foundation

// 클로저란? --> 자바의 익명 클래스라고 생각하면 쉽다

// 일급 함수로서의 특성을 활용하여 상수나 변수에 할당한 다음 클로저 실행하는 방법
let f = { () -> Void in
    print("1클로저가 실행됩니다.")
}
f() // 이렇게 사용하는 이유는 상수 f가 클로저(일종의 익명 함수)로 되어서 단순 상수가 아닌 함수가 되었기 때문에


// 클로저를 직접 실행하는 두 번째 방법
({ () -> Void in
    print("2클로저가 실행됩니다.")
})()
// 이 방법은 상수나 변수 자체를 할당하지 않고 사용하고 싶을 때 사용하며, 괄호로 감싼 후에 함수 작성 후 ()통해서 함수 호출한다.
// 이 방법은 소괄호를 사용하지 않으면 오류 발생할 수 있으니 주의한다.


// 매개변수가 있는 클로저 형태
let c = { (s1:Int, s2:String) -> Void in
    print("s1:\(s1), s2:\(s2)")
}
c(1,"closure")

// 매개변수가 있는 클로저 형태이지만 변수나 상수에 할당이 없어 직접 실행하는 형태
({ (s1:Int, s2:String) -> Void in
    print("s1:\(s1), s2:\(s2)")
})(1,"closure2")

/* tradeoff 관계가 여기서도 어느정도 확인되는데
 간결해질수록 가독성이... 떨어진다.
 그 사이에서 우리는 고민을 많이 해야한다.
 */


